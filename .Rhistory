'Virtual',
'Salzburg, Austria',
'Seattle, WA, USA',
'Seattle, WA, USA',
'New York City, NY, USA',
'Chicago, IL, USA',
'London, UK',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual'
),
Type = c('Webinar', 'Conference', 'Webinar', 'Conference', 'Conference', 'Conference', 'Conference', 'Conference',
'Conference', 'Conference', 'Webinar', 'Webinar', 'Webinar', 'Webinar', 'Webinar', 'Webinar',
'Webinar', 'Webinar', 'Webinar'),
icon = c('Webinar', 'Conference', 'Webinar', 'Conference', 'Conference', 'Conference', 'Conference', 'Conference',
'Conference', 'Conference', 'Webinar', 'Webinar', 'Webinar', 'Webinar', 'Webinar', 'Webinar',
'Webinar', 'Webinar', 'Webinar'),
stringsAsFactors = FALSE
)
df <- df |>
dplyr::filter(icon %in% c("Conference", "Webinar")) |>
dplyr::mutate(
icon = ifelse(icon == "Webinar", "chalkboard-user", "handshake")
)
# Load necessary libraries
library(gt)
# Create a gt table and use fmt_markdown() to render HTML links
gt_table <- gt(df) %>%
cols_label(
Title = "Title",
dates = "Dates",
location = "Location",
Type  = "Type",
) %>%
fmt_icon(columns =c(icon)) %>%
cols_merge(columns = c(Type, icon),
pattern="{2}    {1}") %>%
tab_options(
heading.background.color = "grey",
column_labels.background.color = "grey",
column_labels.font.weight = "bold",
table.font.size = "14px",
column_labels.font.size = "16px"
) %>%
opt_horizontal_padding(scale = 3)  %>%
opt_vertical_padding(scale = 2) %>%
# Render the 'Link' column as HTML using fmt_markdown()
fmt_markdown(columns = c(Title))
# Print the gt table
gt_table
# Sample data frame with HTML links
df <- data.frame(
Title = c(
"[Shiny in Production 2024](https://shiny-in-production.jumpingrivers.com/)",
"[2024 Government & Public Sector R Conference](https://www.rstats.ai/gov)",
"[R/Pharma 2024](https://rinpharma.com/)",
"[Analyze Companies using Financial Ratios](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#analyze-companies-using-financial-ratios)",
"[LatinR 2024](https://latinr.org/en/)",
"[Value Companies using Discounted Cash Flow Analysis](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#value-companies-using-discounted-cash-flow-analysis)"
),
dates = c("Oct 9-10, 2024",
"Oct 29-30, 2024", "Oct 29-31, 2024", "Nov 6, 2024", "Nov 18-22, 2024", "Dec 4, 2024"),
location = c("Newcastle upon Tyne, UK", "Washington D.C., USA", "Virtual", "Virtual", "Virtual", "Virtual"),
icon = c("Conference", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
Type = c("Conference", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
stringsAsFactors = FALSE
)
df <- df |>
dplyr::filter(icon %in% c("Conference", "Webinar")) |>
dplyr::mutate(
icon = ifelse(icon == "Webinar", "chalkboard-user", "handshake")
)
# Load necessary libraries
library(gt)
# Create a gt table and use fmt_markdown() to render HTML links
gt_table <- gt(df) %>%
fmt_icon(columns = icon) %>%
cols_label(
Title = "Title",
dates = "Dates",
location = "Location",
icon  = "Type",
) %>%
tab_options(
heading.background.color = "lightblue",
column_labels.background.color = "lightblue",
column_labels.font.weight = "bold",
table.font.size = "14px",
column_labels.font.size = "16px"
) %>%
opt_horizontal_padding(scale = 3)  %>%
opt_vertical_padding(scale = 2) %>%
#
cols_merge(columns = c(Type, icon),
pattern="{2}    {1}") %>%
# Render the 'Link' column as HTML using fmt_markdown()
fmt_markdown(columns = c(Title))
# Print the gt table
gt_table
# Sample data frame with HTML links
df <- data.frame(
Title = c(
"[Shiny in Production 2024](https://shiny-in-production.jumpingrivers.com/)",
"[2024 Government & Public Sector R Conference](https://www.rstats.ai/gov)",
"[R/Pharma 2024](https://rinpharma.com/)",
"[Analyze Companies using Financial Ratios](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#analyze-companies-using-financial-ratios)",
"[LatinR 2024](https://latinr.org/en/)",
"[Value Companies using Discounted Cash Flow Analysis](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#value-companies-using-discounted-cash-flow-analysis)"
),
dates = c("Oct 9-10, 2024",
"Oct 29-30, 2024", "Oct 29-31, 2024", "Nov 6, 2024", "Nov 18-22, 2024", "Dec 4, 2024"),
location = c("Newcastle upon Tyne, UK", "Washington D.C., USA", "Virtual", "Virtual", "Virtual", "Virtual"),
icon = c("Conference", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
Type = c("Conference", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
stringsAsFactors = FALSE
)
df <- df |>
dplyr::filter(icon %in% c("Conference", "Webinar")) |>
dplyr::mutate(
icon = ifelse(icon == "Webinar", "chalkboard-user", "handshake")
)
# Load necessary libraries
library(gt)
# Create a gt table and use fmt_markdown() to render HTML links
gt_table <- gt(df) %>%
fmt_icon(columns = icon) %>%
cols_label(
Title = "Title",
dates = "Dates",
location = "Location",
icon  = "Type",
) %>%
tab_options(
heading.background.color = "lightblue",
column_labels.background.color = "lightblue",
column_labels.font.weight = "bold",
table.font.size = "14px",
column_labels.font.size = "16px"
) %>%
opt_horizontal_padding(scale = 3)  %>%
opt_vertical_padding(scale = 2) %>%
#
cols_merge(columns = c(Type, icon),
pattern="{2}    {1}") %>%
# Render the 'Link' column as HTML using fmt_markdown()
fmt_markdown(columns = c(Title))
# Print the gt table
gt_table
# Sample data frame with HTML links
df <- data.frame(
Title = c(
"[Shiny in Production 2024](https://shiny-in-production.jumpingrivers.com/)",
"[Unlocking Insights from LatinR: Collaboration and Innovation in Data Science](https://r-consortium.org/webinars/unlocking-insights-from-latinr.html)",
"[2024 Government & Public Sector R Conference](https://www.rstats.ai/gov)",
"[R/Pharma 2024](https://rinpharma.com/)",
"[Analyze Companies using Financial Ratios](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#analyze-companies-using-financial-ratios)",
"[LatinR 2024](https://latinr.org/en/)",
"[Value Companies using Discounted Cash Flow Analysis](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#value-companies-using-discounted-cash-flow-analysis)"
),
dates = c("Oct 9-10, 2024",
"Oct 29-30, 2024", "Oct 22, 2024", "Oct 29-31, 2024", "Nov 6, 2024", "Nov 18-22, 2024", "Dec 4, 2024"),
location = c("Newcastle upon Tyne, UK", "Virtual", "Washington D.C., USA", "Virtual", "Virtual", "Virtual", "Virtual"),
icon = c("Conference", "Webinar", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
Type = c("Conference", "Webinar", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
stringsAsFactors = FALSE
)
df <- df |>
dplyr::filter(icon %in% c("Conference", "Webinar")) |>
dplyr::mutate(
icon = ifelse(icon == "Webinar", "chalkboard-user", "handshake")
)
# Load necessary libraries
library(gt)
# Create a gt table and use fmt_markdown() to render HTML links
gt_table <- gt(df) %>%
fmt_icon(columns = icon) %>%
cols_label(
Title = "Title",
dates = "Dates",
location = "Location",
icon  = "Type",
) %>%
tab_options(
heading.background.color = "lightblue",
column_labels.background.color = "lightblue",
column_labels.font.weight = "bold",
table.font.size = "14px",
column_labels.font.size = "16px"
) %>%
opt_horizontal_padding(scale = 3)  %>%
opt_vertical_padding(scale = 2) %>%
#
cols_merge(columns = c(Type, icon),
pattern="{2}    {1}") %>%
# Render the 'Link' column as HTML using fmt_markdown()
fmt_markdown(columns = c(Title))
# Print the gt table
gt_table
# Sample data frame with HTML links
df <- data.frame(
Title = c(
"[Unlocking Insights from LatinR: Collaboration and Innovation in Data Science](https://r-consortium.org/webinars/unlocking-insights-from-latinr.html)",
"[2024 Government & Public Sector R Conference](https://www.rstats.ai/gov)",
"[R/Pharma 2024](https://rinpharma.com/)",
"[Analyze Companies using Financial Ratios](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#analyze-companies-using-financial-ratios)",
"[LatinR 2024](https://latinr.org/en/)",
"[Value Companies using Discounted Cash Flow Analysis](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#value-companies-using-discounted-cash-flow-analysis)"
),
dates = c("Oct 29-30, 2024", "Oct 22, 2024", "Oct 29-31, 2024", "Nov 6, 2024", "Nov 18-22, 2024", "Dec 4, 2024"),
location = c("Virtual", "Washington D.C., USA", "Virtual", "Virtual", "Virtual", "Virtual"),
icon = c("Webinar", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
Type = c("Webinar", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
stringsAsFactors = FALSE
)
df <- df |>
dplyr::filter(icon %in% c("Conference", "Webinar")) |>
dplyr::mutate(
icon = ifelse(icon == "Webinar", "chalkboard-user", "handshake")
)
# Load necessary libraries
library(gt)
# Create a gt table and use fmt_markdown() to render HTML links
gt_table <- gt(df) %>%
fmt_icon(columns = icon) %>%
cols_label(
Title = "Title",
dates = "Dates",
location = "Location",
icon  = "Type",
) %>%
tab_options(
heading.background.color = "lightblue",
column_labels.background.color = "lightblue",
column_labels.font.weight = "bold",
table.font.size = "14px",
column_labels.font.size = "16px"
) %>%
opt_horizontal_padding(scale = 3)  %>%
opt_vertical_padding(scale = 2) %>%
#
cols_merge(columns = c(Type, icon),
pattern="{2}    {1}") %>%
# Render the 'Link' column as HTML using fmt_markdown()
fmt_markdown(columns = c(Title))
# Print the gt table
gt_table
# Sample data frame with HTML links
df <- data.frame(
Title = c(
'<a href="https://shiny-in-production.jumpingrivers.com/" target="_blank" rel="noreferrer noopener">Shiny in Production 2024</a>',
'<a href="https://r-consortium.org/webinars/tidy-finance-webinar-series.html#evaluate-performance-using-the-capital-asset-pricing-model" target="_blank" rel="noreferrer noopener">Evaluate Performance using the Capital Asset Pricing Model</a>',
'<a href="https://www.ascent.io/earl" target="_blank" rel="noreferrer noopener">EARL 2024</a>',
'<a href="https://r-consortium.org/webinars/tidy-finance-webinar-series.html#optimize-portfolios-using-the-markowitz-model" target="_blank" rel="noreferrer noopener">Optimize Portfolios using the Markowitz Model</a>',
'<a href="https://www.r-project.org/conferences/" target="_blank" rel="noreferrer noopener">useR! 2024</a>',
'<a href="https://posit.co/conference/" target="_blank" rel="noreferrer noopener">posit::conf 2024</a>',
'<a href="https://cascadiarconf.com/" target="_blank" rel="noreferrer noopener">Cascadia R Conference</a>',
'<a href="https://www.rstats.nyc/" target="_blank" rel="noreferrer noopener">New York R Conference</a>',
'<a href="https://www.rinfinance.com/" target="_blank" rel="noreferrer noopener">R/Finance 2024</a>',
'<a href="https://satrday-london-2024.jumpingrivers.com/" target="_blank" rel="noreferrer noopener">SatRdays London 2024</a>',
'<a href="https://www.r-consortium.org/r-medicine-quarto-for-reproducible-medical-manuscripts" target="_blank" rel="noreferrer noopener">R/Medicine: Quarto for Reproducible Medical Manuscripts</a>',
'<a href="https://www.r-consortium.org/new-webinar-tidy-finance-and-accessing-financial-data" target="_blank" rel="noreferrer noopener">New Webinar: Tidy Finance and Accessing Financial Data</a>',
'<a href="https://www.r-consortium.org/escape-the-data-dungeon-unlock-scalable-r-analytics-and-ml" target="_blank" rel="noreferrer noopener">Escape the Data Dungeon: Unlock Scalable R Analytics and ML</a>',
'<a href="https://www.r-consortium.org/from-vision-to-action-the-r-pfizer-r-center-of-excellence-led-journey-to-r-adoption" target="_blank" rel="noreferrer noopener">From Vision to Action: The Pfizer R Center of Excellence-led journey to R Adoption</a>',
'<a href="https://www.r-consortium.org/r-insurance-series-for-everyone-in-insurance-or-actuarial-science" target="_blank" rel="noreferrer noopener">R/Insurance Series: High performance programming in R</a>',
'<a href="https://www.r-consortium.org/r-insurance-series-for-everyone-in-insurance-or-actuarial-science" target="_blank" rel="noreferrer noopener">Dan Sjoberg presenting on Plotting Survival with {ggsurvfit}</a>',
'<a href="https://www.r-consortium.org/r-insurance-series-for-everyone-in-insurance-or-actuarial-science" target="_blank" rel="noreferrer noopener">R/Insurance Series:&nbsp;R performance culture</a>',
'<a href="https://www.r-consortium.org/r-insurance-series-for-everyone-in-insurance-or-actuarial-science" target="_blank" rel="noreferrer noopener">R/Insurance Series: From programming in R to putting R into production</a>',
'<a href="https://www.r-consortium.org/r-insurance-series-for-everyone-in-insurance-or-actuarial-science" target="_blank" rel="noreferrer noopener">R/Insurance Series:&nbsp;From Excel to Programming in R</a>',
'<a href="https://www.r-consortium.org/r-adoption-series-the-adoption-of-r-in-japans-pharma-industry-confirmation" target="_blank" rel="noreferrer noopener">The use of R in Japan’s Pharma Industry</a>'
),
dates = c(
'October 9-10, 2024',
'October 9, 2024',
'September 4-5, 2024',
'September 4, 2024',
'July 8-11, 2024',
'August 12-14, 2024',
'June 21-22, 2024',
'May 16-17, 2024',
'May 17-18, 2024',
'April 27, 2024',
'March 20, 2024',
'March 6, 2024',
'February 27, 2024',
'February 8, 2024',
'January 31, 2024',
'January 25, 2024',
'January 24, 2024',
'January 17, 2024',
'January 10, 2024',
'January 8, 2024'
),
location = c(
'Newcastle upon Tyne, UK',
'Virtual',
'Brighton, UK',
'Virtual',
'Salzburg, Austria',
'Seattle, WA, USA',
'Seattle, WA, USA',
'New York City, NY, USA',
'Chicago, IL, USA',
'London, UK',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual',
'Virtual'
),
Type = c('Conference', 'Webinar', 'Conference', 'Webinar', 'Conference', 'Conference', 'Conference', 'Conference', 'Conference',
'Conference', 'Conference', 'Webinar', 'Webinar', 'Webinar', 'Webinar', 'Webinar', 'Webinar',
'Webinar', 'Webinar', 'Webinar'),
icon = c('Conference', 'Webinar', 'Conference', 'Webinar', 'Conference', 'Conference', 'Conference', 'Conference', 'Conference',
'Conference', 'Conference', 'Webinar', 'Webinar', 'Webinar', 'Webinar', 'Webinar', 'Webinar',
'Webinar', 'Webinar', 'Webinar'),
stringsAsFactors = FALSE
)
df <- df |>
dplyr::filter(icon %in% c("Conference", "Webinar")) |>
dplyr::mutate(
icon = ifelse(icon == "Webinar", "chalkboard-user", "handshake")
)
# Load necessary libraries
library(gt)
# Create a gt table and use fmt_markdown() to render HTML links
gt_table <- gt(df) %>%
cols_label(
Title = "Title",
dates = "Dates",
location = "Location",
Type  = "Type",
) %>%
fmt_icon(columns =c(icon)) %>%
cols_merge(columns = c(Type, icon),
pattern="{2}    {1}") %>%
tab_options(
heading.background.color = "grey",
column_labels.background.color = "grey",
column_labels.font.weight = "bold",
table.font.size = "14px",
column_labels.font.size = "16px"
) %>%
opt_horizontal_padding(scale = 3)  %>%
opt_vertical_padding(scale = 2) %>%
# Render the 'Link' column as HTML using fmt_markdown()
fmt_markdown(columns = c(Title))
# Print the gt table
gt_table
# Sample data frame with HTML links
df <- data.frame(
Title = c(
"[Unlocking Insights from LatinR: Collaboration and Innovation in Data Science](https://r-consortium.org/webinars/unlocking-insights-from-latinr.html)",
"[2024 Government & Public Sector R Conference](https://www.rstats.ai/gov)",
"[R/Pharma 2024](https://rinpharma.com/)",
"[Analyze Companies using Financial Ratios](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#analyze-companies-using-financial-ratios)",
"[LatinR 2024](https://latinr.org/en/)",
"[Value Companies using Discounted Cash Flow Analysis](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#value-companies-using-discounted-cash-flow-analysis)"
),
dates = c("Oct 22, 2024", "Oct 29-30, 2024", "Oct 29-31, 2024", "Nov 6, 2024", "Nov 18-22, 2024", "Dec 4, 2024"),
location = c("Virtual", "Washington D.C., USA", "Virtual", "Virtual", "Virtual", "Virtual"),
icon = c("Webinar", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
Type = c("Webinar", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
stringsAsFactors = FALSE
)
df <- df |>
dplyr::filter(icon %in% c("Conference", "Webinar")) |>
dplyr::mutate(
icon = ifelse(icon == "Webinar", "chalkboard-user", "handshake")
)
# Load necessary libraries
library(gt)
# Create a gt table and use fmt_markdown() to render HTML links
gt_table <- gt(df) %>%
fmt_icon(columns = icon) %>%
cols_label(
Title = "Title",
dates = "Dates",
location = "Location",
icon  = "Type",
) %>%
tab_options(
heading.background.color = "lightblue",
column_labels.background.color = "lightblue",
column_labels.font.weight = "bold",
table.font.size = "14px",
column_labels.font.size = "16px"
) %>%
opt_horizontal_padding(scale = 3)  %>%
opt_vertical_padding(scale = 2) %>%
#
cols_merge(columns = c(Type, icon),
pattern="{2}    {1}") %>%
# Render the 'Link' column as HTML using fmt_markdown()
fmt_markdown(columns = c(Title))
# Print the gt table
gt_table
# Sample data frame with HTML links
df <- data.frame(
Title = c(
"[Unlocking Insights from LatinR: Collaboration and Innovation in Data Science](https://r-consortium.org/webinars/unlocking-insights-from-latinr.html)",
"[2024 Government & Public Sector R Conference](https://www.rstats.ai/gov)",
"[R/Pharma 2024 (with new APAC Track)](https://rinpharma.com/)",
"[Analyze Companies using Financial Ratios](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#analyze-companies-using-financial-ratios)",
"[LatinR 2024](https://latinr.org/en/)",
"[Value Companies using Discounted Cash Flow Analysis](https://r-consortium.org/webinars/tidy-finance-webinar-series.html#value-companies-using-discounted-cash-flow-analysis)"
),
dates = c("Oct 22, 2024", "Oct 29-30, 2024", "Oct 29-31, 2024", "Nov 6, 2024", "Nov 18-22, 2024", "Dec 4, 2024"),
location = c("Virtual", "Washington D.C., USA", "Virtual", "Virtual", "Virtual", "Virtual"),
icon = c("Webinar", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
Type = c("Webinar", "Conference", "Conference", "Webinar", "Conference", "Webinar"),
stringsAsFactors = FALSE
)
df <- df |>
dplyr::filter(icon %in% c("Conference", "Webinar")) |>
dplyr::mutate(
icon = ifelse(icon == "Webinar", "chalkboard-user", "handshake")
)
# Load necessary libraries
library(gt)
# Create a gt table and use fmt_markdown() to render HTML links
gt_table <- gt(df) %>%
fmt_icon(columns = icon) %>%
cols_label(
Title = "Title",
dates = "Dates",
location = "Location",
icon  = "Type",
) %>%
tab_options(
heading.background.color = "lightblue",
column_labels.background.color = "lightblue",
column_labels.font.weight = "bold",
table.font.size = "14px",
column_labels.font.size = "16px"
) %>%
opt_horizontal_padding(scale = 3)  %>%
opt_vertical_padding(scale = 2) %>%
#
cols_merge(columns = c(Type, icon),
pattern="{2}    {1}") %>%
# Render the 'Link' column as HTML using fmt_markdown()
fmt_markdown(columns = c(Title))
# Print the gt table
gt_table
renv::snapshot()
renv::install(bimets)
renv::install("bimets")
renv::snapshot()
install.packages(“renv”)
renv::restore()
install.packages("renv")
renv::restore()
install.packages("ripserr")
install.packages("tidymodels")
install.packages("randomForest")
show_notes(.Last.tune.result)
x <- TDA::torusUnif(n = 200, a = 1, c = 2)
pd <- TDA::alphaComplexDiag(x, maxdimension = 2)
plot(pd$diagram, asp = 1)
library(TDAvec)
computeTropicalCoordinates(pd$diagram, homDim = 1)
xy_seq <- seq(0, 1.5, .5)
computePersistenceBlock(
pd$diagram, homDim = 2,
xSeq = xy_seq, ySeq = xy_seq
)
suppressMessages(library(tdarec))
dat <- tibble(source = "torus", sample = list(x))
recipe(~ sample, data = dat) |>
step_pd_point_cloud(sample, max_hom_degree = 2) |>
step_pd_degree(sample_pd, hom_degrees = 2) |>
step_vpd_persistence_block(
sample_pd_2,
hom_degree = 2, xseq = xy_seq
) -> rec
rec |>
prep(training = dat) |>
bake(new_data = dat)
show_notes(.Last.tune.result)
library(tune)
install.packages("tune")
show_notes(.Last.tune.result)
install.packages("tune")
show_notes(.Last.tune.result)
install.packages("tidymodels")
library(tune)
show_notes(.Last.tune.result)
show_notes(.Last.tune.result)
klein_res <- tune_bayes(...)
klein_res$.notes
renv::restore()
renv::status()
?renv::status
renv::snapshot()
Y
renv::status()
install.packages("rlang")
install.packages("rlang")
renv::status()
renv::install()
