---
title: "Contributing to base R with Coding Equity and Joy - Inside the R Contributors Project"
unpublished: false
description: "Ella Kaye, Research Software Engineer at the University of Warwick and one of the organizers of the R Contributors project covers her efforts to make contributing to base R more accessible and inclusive."
author: "R Consortium"
categories: [RUGS, LGBTQ+, Software Development]
image: "EllaKaye.png"
image-alt: "Making contributing to base R more accessible and inclusive"
date: "07/10/2025"
---

[Ella Kaye](https://www.linkedin.com/in/ellakaye/?originalSubdomain=uk), Research Software Engineer at the University of Warwick and one of the organizers of the [R Contributors project](https://contributor.r-project.org/) (also on [Meetup](https://www.meetup.com/r-contributors/)), recently spoke with the R Consortium about her path into the R community and her efforts to make contributing to base R more accessible and inclusive. She shared insights from organizing R Developer Days, using GitHub to lower barriers for new contributors, learning with joy while developing the R package `aperol`, and fostering community with rainbowR.

![](EllaKaye.png){width=50%}

## Please share about your background and involvement with the RUGS group.

I am currently a Research Software Engineer (RSE) at the University of Warwick in the UK. However, my career path to this point has been long and windy, via mathematics, secondary school teaching, market research, and statistics. I was first introduced to R while pursuing an MSc in Applied Statistics, where I learned to use it in an academic context for statistical analysis. Over time, I found that I enjoyed software development more than statistics itself, which led to my transition into research software engineering. 

During the first year of my PhD program, I developed my first R package, [`BradleyTerryScalable`](https://ellakaye.github.io/BradleyTerryScalable/), for fitting the Bradley-Terry model to pair-wise comparison data. This experience ignited my passion for R package development. In 2017, I presented the package at the [useR! conference](https://user2017.brussels) in Brussels. Just before then, I’d also learnt about R-Ladies and met some members of the London chapter. At the conference, I fully immersed myself in the R community and felt a great sense of camaraderie and a real joy of belonging. 

At Warwick, I’m on the committee of the [Warwick R User Group](https://warwickrug.github.io), but for this interview, I’d prefer to talk about the [R Contributors](https://contributor.r-project.org) project. This initiative is primarily driven by [Dr. Heather Turner](https://www.heatherturner.net/), along with many other contributors. I’m employed on Heather’s fellowship grant, “Sustainability and Equality, Diversity, and Inclusion (EDI) in the R project.” The objective of this fellowship is to foster a larger and more diverse community of contributors to base R.

We organize [R Developer Days](https://contributor.r-project.org/events/r-dev-days/), which bring together a wide range of contributors, from members of R Core to those who’ve never contributed to base R before. In 2023, we held a three-day [R Sprint](https://contributor.r-project.org/r-project-sprint-2023/) at Warwick. Participants came from all over the world and represented various groups within the R community and the broader R world. It was a fantastic experience that led to several patches in the R codebase. We also run monthly R contributor [office hours](https://contributor.r-project.org/events/office-hours/) and a [C Study Group for R contributors](https://contributor.r-project.org/events/c-study-group-2025/).

![](RSprint.png)

_R Project Sprint, University of Warwick, 2023_

## Do you recommend any techniques for planning for or during the event? (Github, Zoom, other.) Can these techniques be used to make your group more inclusive to people who cannot attend physical events in the future?  

At the R Dev Days, we’re doing something a bit different and more specific than general R User Group meetings. What makes the R Dev Days successful is the diverse range of problems and opportunities for people to come together and address bugs in the R codebase. 

Success hinges on identifying suitable bugs to work on, as many listed on [Bugzilla](https://www.bugzilla.org/) may exceed the technical capabilities of the participants or require buy-in from R Core members. A lot of work goes into reviewing bugs on Bugzilla beforehand to select those that are suitable for a Dev Day, ensuring they cater to varying levels of experience and technical skills. 

![](RDevDay.png)

_R Contributors at R Dev Day @ PLUS 2024_

We aim to cover a range of issues, including documentation improvements, statistical bugs, or infrastructure. Additionally, there is significant work happening to [translate R](https://translate.rx.studio/projects/r-project/)'s error messages into various languages. During R Dev Days, attendees who speak languages other than English can participate by working on translating messages through a web-based translation interface.

For R Dev Days, we have a [GitHub repo](https://github.com/r-devel/r-dev-day) to keep track of ideas and tasks, making use of discussions, issues and labels. This has a lower barrier-to-entry than Bugzilla, and makes collaboration easier and more familiar. Those not able to attend in-person can also engage with these issues.

Overall, these preparations and strategies contribute to a more engaging and productive experience for everyone involved.

## Please share about a project you are currently working on or have worked on in the past using the R language. Goal/reason, result, anything interesting, especially related to the industry you work in? 

Last year, I developed the R package [`aperol`](https://ellakaye.github.io/aperol/). It began as a joke, though underpinned by some serious considerations. It led to some wonderful community interactions and showcases the joy and benefits of working openly. 

Last year, at [useR! 2024](https://events.linuxfoundation.org/user/), a few people went out for drinks. Over a round of Aperol Spritzes, they began wondering what an R package called “aperol” might do, which led to a lively discussion on [Mastodon](https://fosstodon.org/@kellybodwin/112769186345818866). During this exchange, just after the conference, Nick Tierney humorously [suggested](https://aus.social/@njtierney/112770398923583882) that a package called “aperol” could generate praise. I [jumped on that idea](https://fosstodon.org/@ellakaye/112771757956362352) and suggested generating “drunken praise", referencing the existing [`praise`](https://github.com/rladies/praise) package that programmatically creates compliments. I quickly put together a package that generates praise from the praise package, then garbles it, mixing up words or repeating them. 

While the package is a joke, it was also motivated by a talk with a serious message. At the same useR! conference, Fonti Kar had delivered a very well-received talk about the value of creating [silly projects](https://fontikar.github.io/talks/wombat2024/). She emphasized that learning to code in R can feel high-stakes, but engaging in a lighthearted project where the outcomes don’t matter can be an excellent opportunity to learn. Fonti had learnt package development by writing the [`ohwhaley`](https://fontikar.github.io/ohwhaley/) package, which generates ASCII art of a whale accompanied by a pun. Fonti’s talk was part of the inspiration for _aperol_ - I wrote it in the same spirit (pun intended). 

I had assumed, being an experienced package developer, that creating _aperol_ would be straightforward, and, for v0.1.0, it was. However, one of the wonderful things about publishing projects on GitHub and engaging in open-source work is that others can see what you’re doing and comment or contribute. For instance, Maëlle Salmon reached out with suggestions to improve the code, which I appreciated, pointing me towards the `local_seed()` function in the [`withr`](https://withr.r-lib.org) package. Additionally, Collin Schwantes proposed a pull request to add a new function. While his feature idea was fun, its implementation went against some best practices in package development. It turned into a learning opportunity for both of us, and we ultimately solved the problem by making use of the [environment](https://r-pkgs.org/data.html#sec-data-state). This underscores Fonti’s point that building silly things can facilitate serious learning. 

I also appreciate what this experience says about the R community. I love the journey from throw-away comment to silly package to serious learning, with folks in the R community engaged at each stage. During the same conference, Kelly Bodwin delivered a keynote address titled “[Keep R weird,](https://www.youtube.com/watch?v=KOQBfC1WPwM)” expressing her deep affection for the R community and its joy, fun, and silliness. That talk fired me up and was also part of the inspiration for creating the `aperol` package.

## Is there anything else regarding your involvement with R or the R community you’d like to share?

I never miss an opportunity to talk about [rainbowR](https://rainbowr.org), a community that connects, supports and promotes LGBTQ+ folk who code in R, and spreads awareness of LGBTQ+ issues through data-driven activism!

This takes us back to the useR! 2017 conference I talked about earlier. The idea for rainbowR emerged from a conversation I had with someone there. As we chatted, we discovered that we are both gay. My conversation partner expressed feeling overwhelmed by the size of the conference, but upon realizing he was talking to someone else gay, he felt more at ease. This exchange highlighted the importance of fostering community and the value of smaller, specific communities within larger groups. We saw the need for a community of LGBTQ+ folks who code in R, and that's how rainbowR was founded. I’m still running the community, along with a wonderful team, and it’s thriving. If you’re LGBTQ+ and code in R, do consider [joining](https://rainbowr.org/join)!

My experience of the R community as a whole is wonderful, but its size can sometimes make it challenging to find a sense of belonging. That's partly why Heather and I focus our efforts on equity, diversity, and inclusion (EDI). We are committed to creating spaces and opportunities for those who might feel overlooked. When individuals feel welcomed and supported in a community, it not only enhances their experience but also encourages their technical engagement. This supportive environment can help people see their value as developers. It has been particularly rewarding for me to see several members of rainbowR contribute to base R.

## How do I Build an R User Group?

R Consortium’s R User Group and Small Conference Support Program (RUGS) provides grants to help R groups organize, share information, and support each other worldwide. We have given grants over the past four years, encompassing over 76,000 members in over 90 user groups in 39 countries. We would like to include you! Cash grants and meetup.com accounts are awarded based on the intended use of the funds and the amount of money available to distribute

[https://r-consortium.org/all-projects/rugsprogram.htm](https://r-consortium.org/all-projects/rugsprogram.html)
